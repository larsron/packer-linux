---

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

### Rocky Linux >= 8

- name: "{{ ansible_facts['distribution'] }} - Set variables."
  set_fact:
    audit_logs:
      - /var/log/audit/audit.log
      - /var/log/wtmp
      - /var/log/lastlog
    tmp_dirs:
      - "/tmp"
      - "/var/tmp"
      - "/var/cache/dnf"

- name: "{{ ansible_facts['distribution'] }} - Updating the guest operating system."
  dnf:
    name: "*"
    state: latest
    update_cache: yes
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Installing additional packages."
  dnf:
    name:
      - rocky-gpg-keys
    state: latest
  when: ansible_distribution_major_version == "8"

#- name: "{{ ansible_facts['distribution'] }} - Get releasever."
#  ansible.builtin.shell: "rpm --eval '%{{ '{' }}{{ ansible_facts['distribution']|lower }}{{ '}' }}'"
#  register: releasever
#  warn: false

#- name: "{{ ansible_facts['distribution'] }} - Get basearch."
#  ansible.builtin.shell: uname -i
#  register: basearch

#- name: "{{ ansible_facts['distribution'] }} - Importing RPM GPG key."
#  ansible.builtin.rpm_key:
#    key: "/etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-{{ releasever.stdout }}-{{ basearch.stdout }}"
#    state: present

- name: "{{ ansible_facts['distribution'] }} - Workaround - mask cloud-init services."
  ansible.builtin.systemd:
    name: "{{ item }}"
    masked: yes
  with_items:
    - cloud-init
    - cloud-init-local
    - cloud-config
    - cloud-final

- name: "{{ ansible_facts['distribution'] }} - Remove the linux-firmware package."
  ansible.builtin.dnf:
    name: linux-firmware
    state: absent
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Cleaning all audit logs."
  include_tasks: audit_logs.yml
  loop: "{{ audit_logs }}"
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Cleaning persistent udev rules."
  ansible.builtin.file:
    path: /etc/udev/rules.d/70-persistent-net.rules
    state: absent
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Cleaning temporary directories."
  include_tasks: tmp_dirs.yml
  loop: "{{ tmp_dirs }}"
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Cleaning dnf cache."
  command: /usr/bin/dnf clean all
  when: ansible_facts['distribution_major_version'] >= "8"

- name: "{{ ansible_facts['distribution'] }} - Cleaning the SSH keys."
  block:
    - name: "{{ ansible_facts['distribution'] }} - Finding the SSH keys."
      ansible.builtin.find:
        paths: "/etc/ssh"
        patterns: "ssh_host_*"
        file_type: file
      register: ssh_keys

    - name: "{{ ansible_facts['distribution'] }} - Removing the SSH keys."
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items: >
        {{
          ssh_keys.files
        }}
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Setting the hostname to localhost."
  ansible.builtin.hostname:
    name: localhost
    use: systemd
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Cleaning dnf cache files."
  ansible.builtin.file:
    path: "/var/cache/{{ item }}"
    state: absent
  with_items:
    - dnf
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Cleaning the machine-id."
  block:
    - name: "{{ ansible_facts['distribution'] }} - Removing /etc/machine-id."
      ansible.builtin.file:
        path: /etc/machine-id
        state: absent
    - name: "{{ ansible_facts['distribution'] }} - Removing /var/lib/dbus/machine-id."
      file:
        path: /var/lib/dbus/machine-id
        state: absent
    - name: "{{ ansible_facts['distribution'] }} - Generating new machine-id."
      command: systemd-machine-id-setup
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Removing random-seed."
  ansible.builtin.file:
    path: /var/lib/systemd/random-seed
    state: absent
  when: ansible_distribution_major_version == "8"

- name: "{{ ansible_facts['distribution'] }} - Cleaning leftover networking configurations."
  block:
    - name: "{{ ansible_facts['distribution'] }} - Finding leftover networking configurations."
      ansible.builtin.find:
        paths: "/etc/NetworkManager/system-connections"
        patterns: "*.nmconnection"
        file_type: file
      register: net_connections

    - name: "{{ ansible_facts['distribution'] }} - Removing leftover networking configurations."
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items: >
        {{
          net_connections.files
        }}
  when: ansible_distribution_major_version == "8"